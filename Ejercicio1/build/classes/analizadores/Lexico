package analizadores;
import java_cup.runtime.Symbol;

%%
%class Lexico
%public
%line
%char
%cup
%unicode
%ignorecase

%init{
    yyline = 1;
    yychar = 1;
%init}

ESPACIO_BLANCO = [ \r\t]+
CADENACONCOMILLAS = [\"]([^\"\n]|(\\\"))*[\"]
E = [0-9]+
D = [0-9]+("."[ |0-9]+)?
ID = [A-Za-z]+["_"0-9A-Za-z]*
COMENTARIO_LINEA = ("//".*\r\n)|("//".*\n)|("//".*\r)
COMENTARIO_MULTILINEA = "/*""/"*([^*/]|[^*]"/"|"*"[^/])*"*"*"*/"
%%

{COMENTARIO_LINEA} {}
{COMENTARIO_MULTILINEA} {}
{CADENACONCOMILLAS} {return new Symbol(sym.CADENA,yyline,yychar, (yytext()).substring(1,yytext().length()-1));}

"Print" {return new Symbol(sym.RIMPRIMIR,yyline,yychar, yytext());} 
"Number" {return new Symbol(sym.RNUMBER,yyline,yychar, yytext());} 
"Declare" {return new Symbol(sym.RDECLARE, yyline, yychar, yytext());}
"String" {return new Symbol(sym.RSTRING, yyline, yychar, yytext());}
"Boolean" {return new Symbol(sym.RBOOLEAN, yyline, yychar, yytext());}
"True" {return new Symbol(sym.RTRUE, yyline, yychar, yytext());}
"False" {return new Symbol(sym.RFALSE, yyline, yychar, yytext());}
"Not" {return new Symbol(sym.RNOT, yyline, yychar, yytext());}
"And" {return new Symbol(sym.RAND, yyline, yychar, yytext());}
"Or" {return new Symbol(sym.ROR, yyline, yychar, yytext());}
"If" {return new Symbol(sym.RIF, yyline, yychar, yytext());}
"Else" {return new Symbol(sym.RELSE, yyline, yychar, yytext());}

";" {return new Symbol(sym.PTCOMA,yyline,yychar, yytext());} 
"(" {return new Symbol(sym.PARIZQ,yyline,yychar, yytext());} 
")" {return new Symbol(sym.PARDER,yyline,yychar, yytext());} 
"{" {return new Symbol(sym.LLAVEIZQ,yyline,yychar, yytext());} 
"}" {return new Symbol(sym.LLAVEDER,yyline,yychar, yytext());} 
"+" {return new Symbol(sym.MAS,yyline,yychar, yytext());} 
"-" {return new Symbol(sym.MENOS,yyline,yychar, yytext());} 
"*" {return new Symbol(sym.POR,yyline,yychar, yytext());} 
"/" {return new Symbol(sym.DIVISION,yyline,yychar, yytext());} 
"&" {return new Symbol(sym.CONCAT,yyline,yychar, yytext());} 
"<" {return new Symbol(sym.MENORQUE,yyline,yychar, yytext());} 
">" {return new Symbol(sym.MAYORQUE,yyline,yychar, yytext());}
"<=" {return new Symbol(sym.MENORIGUALQUE,yyline,yychar, yytext());} 
">=" {return new Symbol(sym.MAYORIGUALQUE,yyline,yychar, yytext());} 
"<>" {return new Symbol(sym.DISTINTO,yyline,yychar, yytext());}
"=" {return new Symbol(sym.IGUAL,yyline,yychar, yytext());}
"==" {return new Symbol(sym.IGUALIGUAL,yyline,yychar, yytext());} 

\n {yychar=1;}

{ESPACIO_BLANCO} {} 
{ID} {return new Symbol(sym.IDENTIFICADOR,yyline,yychar, yytext());} 
{E} {return new Symbol(sym.ENTERO,yyline,yychar, yytext());} 
{D} {return new Symbol(sym.DECIMAL,yyline,yychar, yytext());} 

. {
    System.err.println("Este es un error lexico: "+yytext()+", en la linea: "+yyline+", en la columna: "+yychar);
}